package com.ggp.utils.recall;

import com.ggp.*;
import sun.reflect.generics.reflectiveObjects.NotImplementedException;

public class ImperfectRecallExploitability {
    public static double computeExploitability(IStrategy normalizedStratForBothPlayers, IGameDescription gameDescription) {
        return computeExploitability(normalizedStratForBothPlayers, gameDescription.getInitialState());
    }

    public static double computeExploitability(IStrategy normalizedStratForBothPlayers, ICompleteInformationState initialState) {
        IStrategy perfRecallStrategy = new IStrategy() {
            private IInformationSet getOrigInfoSet(IInformationSet is) {
                PerfectRecallIS pris = (PerfectRecallIS) is;
                return pris.getOrigInfoSet();
            }

            @Override
            public double getProbability(IInformationSet s, IAction a) {
                return normalizedStratForBothPlayers.getProbability(getOrigInfoSet(s), a);
            }

            @Override
            public IAction sampleAction(IInformationSet s) {
                return normalizedStratForBothPlayers.sampleAction(getOrigInfoSet(s));
            }

            @Override
            public Iterable<IInformationSet> getDefinedInformationSets() {
                throw new NotImplementedException();
            }
        };
        return PerfectRecallExploitability.computeExploitability(perfRecallStrategy, PerfectRecallGameDescriptionWrapper.wrapInitialState(initialState));
    }
}
